     ----- TEST MODE WITH INTENDED PARTITION 1x1-----
                    _            _
  ___           _  | |        _  \ \   Version : d021d9e-master
 / __|  _ __   (_) | |  ___  (_)  | |   
 \__ \ | '  \   _  | | / -_)  _   | |
 |___/ |_|_|_| |_| |_| \___| |_|  | |  
                                 /_/    
 
 

 Reading the simulation parameters
 --------------------------------------------------------------------------------
 HDF5 version 1.12.2
 Python version 3.9.2
	 Parsing pyinit.py
	 Parsing d021d9e-master
	 Parsing pyprofiles.py
	 Parsing test.py
	 Parsing pycontrol.py
	 Check for function preprocess()
	 python preprocess function does not exist
	 Calling python _smilei_check
	 Calling python _keep_python_running() :
[;33m
[WARNING](0) src/Params/Params.cpp:656 (Params) Patches distribution: hilbertian[0m
[;33m
[WARNING](0) src/Params/Params.cpp:1049 (compute) simulation_time has been redefined from 2342.128578 to 2342.126124 to match timestep.[0m
 

 Geometry: 3Dcartesian
 --------------------------------------------------------------------------------
	 Interpolation order : 2
	 Maxwell solver : Yee
	 simulation duration = 2342.126124,   total number of iterations = 415820
	 timestep = 0.005633 = 0.999000 x CFL,   time resolution = 177.539542
	 Grid length: 0.625, 1.25, 0.625
	 Cell length: 0.00976562, 0.00976562, 0.00976562
	 Number of cells: 64, 128, 64
	 Spatial resolution: 102.4, 102.4, 102.4
 

 Electromagnetic boundary conditions
 --------------------------------------------------------------------------------
	 xmin silver-muller, absorbing vector [1, 0, 0]
	 xmax silver-muller, absorbing vector [-1, -0, -0]
	 ymin silver-muller, absorbing vector [0, 1, 0]
	 ymax silver-muller, absorbing vector [-0, -1, -0]
	 zmin silver-muller, absorbing vector [0, 0, 1]
	 zmax silver-muller, absorbing vector [-0, -0, -1]
 

 Vectorization: 
 --------------------------------------------------------------------------------
	 Mode: off
 

 Initializing MPI
 --------------------------------------------------------------------------------
	 MPI_THREAD_MULTIPLE enabled
	 Number of MPI processes: 1
	 Number of threads per MPI process : 1
 
	 Number of patches: 8 x 16 x 8
	 Number of cells in one patch: 8 x 8 x 8
	 Dynamic load balancing: never
 

 Initializing the restart environment
 --------------------------------------------------------------------------------
 

 Initializing species
 --------------------------------------------------------------------------------
	 
	 Creating Species #0: solar_electron
		 > Pusher: boris
		 > Boundary conditions: remove remove remove remove remove remove
		 > Density profile: 3D built-in profile `constant` (value: 0.000000)
	 
	 Creating Species #1: solar_proton
		 > Pusher: boris
		 > Boundary conditions: remove remove remove remove remove remove
		 > Density profile: 3D built-in profile `constant` (value: 0.000000)
 

 Initializing External fields
 --------------------------------------------------------------------------------
	 External field Bx: 3D from file `LMA_fields_input.h5/Bx`
	 External field By: 3D from file `LMA_fields_input.h5/By`
	 External field Bz: 3D from file `LMA_fields_input.h5/Bz`
	 External field By: 3D built-in profile `constant` (value: 0.228805)
 

 Initializing particle injectors
 --------------------------------------------------------------------------------
	 
	 Creating Injector: injector_solar_electron
		 > Associated species: solar_electron (of index 0)
		 > Injection from from the side: xmax
		 > Position initialization defined as the species.
		 > Position initialization: random
		 > Momentum initialization defined as the species.
		 > Momentum initialization: maxwell-juettner
		 > Mean velocity defined as the species.
		 > Temperature defined as the species.
		 > Time profile: 1D built-in profile `tconstant` (0.000000)
		 > Particles per cell defined as the associated species: 3D built-in profile `constant` (value: 1.000000).
	 
	 Creating Injector: injector_solar_proton
		 > Associated species: solar_proton (of index 1)
		 > Injection from from the side: xmax
		 > Position initialization: injector_solar_electron
		 > Momentum initialization defined as the species.
		 > Momentum initialization: maxwell-juettner
		 > Mean velocity defined as the species.
		 > Temperature defined as the species.
		 > Time profile: 1D built-in profile `tconstant` (0.000000)
		 > Particles per cell defined as the associated species: 3D built-in profile `constant` (value: 1.000000).
 

 Initializing Patches
 --------------------------------------------------------------------------------
	 First patch created
	 All patches created
 

 Creating Diagnostics, antennas, and external fields
 --------------------------------------------------------------------------------
	 Created TrackParticles #0: species solar_electron
		 id,x,y,px,py,pz,Ex,Ey,Ez,Bx,By,Bz,w
 3D built-in profile `constant` (value: 1.000000)
	 Created TrackParticles #1: species solar_proton
		 id,x,y,px,py,pz,Ex,Ey,Ez,Bx,By,Bz,w
 3D built-in profile `constant` (value: 1.000000)
 

 finalize MPI
 --------------------------------------------------------------------------------
	 Done creating diagnostics, antennas, and external fields
 

 Expected disk usage (approximate)
 --------------------------------------------------------------------------------
	 WARNING: disk usage by non-uniform particles maybe strongly underestimated,
	    especially when particles are created at runtime (ionization, pair generation, etc.)
	 
	 Expected disk usage for diagnostics:
		 File TrackParticlesDisordered_solar_electron.h5: 446.13 M
		 File TrackParticlesDisordered_solar_proton.h5: 446.13 M
		 File scalars.txt: 432.40 K
	 Total disk usage for diagnostics: 892.68 M
	 
 

 Keeping or closing the python runtime environment
 --------------------------------------------------------------------------------
	 Checking for cleanup() function:
	 python cleanup function does not exist
	 Keeping Python interpreter alive
 

 END TEST MODE
 --------------------------------------------------------------------------------
